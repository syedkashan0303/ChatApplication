@model IEnumerable<UserViewModel>

@{
	ViewData["Title"] = "User Management";
}

<div class="card">
	<div class="card-header bg-primary text-white">
		<h3 class="card-title">User List</h3>
	</div>
	<div class="card-body">
		<table id="usersTable" class="table table-striped table-bordered" style="width:100%">
			<thead>
				<tr>
					<th>Username</th>
					<th>Email</th>
					<th>Phone</th>
					<th>Status</th>
					<th>Actions</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var user in Model)
				{
					<tr>
						<td>@user.UserName</td>
						<td>@user.Email</td>
						<td>@user.PhoneNumber</td>
						<td>
							@if (user.LockoutEnd.HasValue && user.LockoutEnd > DateTimeOffset.Now)
							{
								<span class="badge bg-danger">Locked</span>
							}
							else
							{
								<span class="badge bg-success">Active</span>
							}
						</td>
						<td>
							<div class="btn-group" role="group">
								<a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-sm btn-warning">
									<i class="fas fa-edit"></i> Edit
								</a>

								@if (user.IsCurrentUser)
								{

								}
								else
								{
									<button class="btn btn-sm btn-danger delete-user" data-userid="@user.Id">
										<i class="fas fa-trash-alt"></i> Delete
									</button>
									@if (user.LockoutEnd.HasValue && user.LockoutEnd > DateTimeOffset.Now)
									{
										<button class="btn btn-sm btn-success unlock-user" data-userid="@user.Id">
											<i class="fas fa-lock-open"></i> Unlock
										</button>
									}
									else
									{
										<button class="btn btn-sm btn-secondary lock-user" data-userid="@user.Id">
											<i class="fas fa-lock"></i> Lock
										</button>
									}
								}

							</div>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header bg-danger text-white">
				<h5 class="modal-title">Confirm User Deletion</h5>
				<button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<p>Are you sure you want to delete this user? This action cannot be undone.</p>
				<p class="fw-bold" id="usernameToDelete"></p>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger" id="confirmDeleteUser">Delete</button>
			</div>
		</div>
	</div>
</div>



@section Scripts {
	<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
	<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
	<script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
	<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
	<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

	<script>
		$(document).ready(function() {
			// Initialize DataTable
			var table = $('#usersTable').DataTable({
				responsive: true,
				columnDefs: [
					{ orderable: false, targets: [2] }, // Disable sorting on checkboxes and actions
				]
			});

			// Delete user confirmation
			var userIdToDelete;
			$('body').on('click', '.delete-user', function() {
				userIdToDelete = $(this).data('userid');
				var username = $(this).closest('tr').find('td:first').text();
				$('#usernameToDelete').text('User: ' + username);
				$('#deleteUserModal').modal('show');
			});

			$('#confirmDeleteUser').click(function() {
				$.ajax({
					url: '/Group/DeleteUser/' + userIdToDelete,
					type: 'POST',
					success: function(result) {
						if (result.success) {
							table.row('#user-' + userIdToDelete).remove().draw();
							$('#deleteUserModal').modal('hide');
							toastr.success(result.message);
							setTimeout(function () {
								  location.reload();
							}, 1000);
						} else {
							toastr.error(result.message);
						}
					},
					error: function(xhr) {
						toastr.error('An error occurred while deleting the user.');
					}
				});
			});
			// Lock/unlock user
			$('body').on('click', '.lock-user, .unlock-user', function() {
				var userId = $(this).data('userid');
				var isLock = $(this).hasClass('lock-user');
				var button = $(this);

				$.ajax({
					url: isLock ? '/Group/LockUser' : '/Group/UnlockUser',
					type: 'POST',
					data: { userId: userId },
					success: function(response) {
						if (response.success) {
							// Refresh the row or entire table
							toastr.success(response.message);
							setTimeout(function () {
								  location.reload();
							}, 1000);
						} else {
							toastr.error(response.message);
						}
					}
				});
			});
		});
	</script>
}