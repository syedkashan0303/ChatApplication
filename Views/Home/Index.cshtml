@model RoleViewModel

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">


<style>
	#messagesList {
		list-style-type: none;
		padding-left: 0;
	}

	.card-footer {
		background-color: #f9f9f9;
		overflow-y: auto;
	}

	.container, .container-lg, .container-md, .container-sm, .container-xl, .container-xxl {
		max-width: 1750px;
	}

	.chatuser {
		width: 100%;
		font-size: 0.85rem;
		opacity: 0.8;
		text-align: center !important;
	}

	.chatuser .time {
		font-weight: normal;
		font-size: 0.8rem;
	}

	.msg {
		font-family: 'Noto Nastaliq Urdu';
		font-size: 10px;
		line-height: 30px
	}

	.msg-custom {
		background-color: #4C94FF;
		text-align: right;
		position: relative;
		padding-bottom: 25px !important;
	}

	.list-group-item {
		padding: 0.0rem 1rem;
	}



	.mt-4 {
		margin-top: -0.7rem !important;
	}

	.msg-custom .copy-btn {
		position: absolute !important;
		background: unset !important;
		bottom: 3px;
		border: unset;
		top: unset !important;
		color: #fff !important;
		font-size: 14px;
	}

	.ChatRoom .card-body {
		padding: 0 !important;
		position: relative;
	}

	.ChatRoom .card-body textarea#chatMessage {
		background: #eee;
		border: 1px #c3c3c3 solid;
		margin-top: 10px;
		padding-right: 65px;
		margin-left: 16px;
	}

	.card.ChatRoom {
		border: unset;
	}

	.list-group-item {
		background: unset;
	}

	.ChatRoom .card-body textarea#chatMessage:active, .ChatRoom .card-body textarea#chatMessage:focus {
		outline: none;
		box-shadow: none;
	}

	.d-flex.customClassContent {
		justify-content: space-between;
		width: 100%;
	}

	.message-text {
		font-size: 12px;
		transition: font-size 0.3s ease; /* Smooth font-size change */
	}

	.TextareaBox {
		position: relative;
	}

	.TextareaBox i {
		position: absolute;
		top: 10px;
		right: 30px;
		margin: auto;
	}

	.TextareaBox i:last-child {
		right: 5px;
	}

	.justify-content-center {
		height: 83vh;
	}


	.group-item {
		transition: all 0.2s ease;
		border: none;
		border-radius: 0.375rem;
		margin-bottom: 5px;
	}

		.group-item:hover {
			background-color: #0d6efd;
			color: white;
			cursor: pointer;
			transform: translateY(-1px);
			box-shadow: 0 2px 6px rgba(0,0,0,0.1);
		}

	.custom-scroll {
		scrollbar-width: thin;
		scrollbar-color: #adb5bd #f8f9fa;
	}

		.custom-scroll::-webkit-scrollbar {
			width: 6px;
		}

		.custom-scroll::-webkit-scrollbar-track {
			background: #f8f9fa;
			border-radius: 4px;
		}

		.custom-scroll::-webkit-scrollbar-thumb {
			background-color: #adb5bd;
			border-radius: 4px;
		}

	.letter-avatar {
		width: 35px;
		height: 35px;
		border-radius: 50%;
		background-color: #fff;
		color: #303d4f;
		font-weight: bold;
		font-size: 16px;
		text-transform: uppercase;
		display: inline-flex;
		align-items: center;
		justify-content: center;
	}

	ul#groupList li {
		display: flex;
		align-items: center;
		margin-bottom: 15px;
	}

		ul#groupList li span {
			font-size: 15px;
		}

	.SideBar {
		background: #2C3E50;
		color: #fff;
		border-radius:0 !important;
	}

		.SideBar .card-header {
			border: unset !important;
			background: #303d4f !important;
			border-bottom: solid 1px #ffffff26 !important;
		}

	.ChatRoom .card-header {
		background: #303d4f !important;
		border-radius: 0 !important;
	}

	.ChatRoom .card {
		border: unset !important;
		border-radius: 0 !important;
	}

	.msg-custom {
		border-radius: 10px !important;
		margin-bottom: 5px !important;
	}

	.SideBar .group-item:hover, .SideBar .group-item.active {
		background: #fff !important;
		color: #303d4f !important;
	}

	.list-group-item.justify-content-end .msg-custom {
		color: #000 !important;
	}

	li.list-group-item.justify-content-start .msg-custom {
		color: #fff !important;
	}

	.ChatRoom button#sendMessage {
		background: #303d4f !important;
		border: solid 1px #303d4f !important;
	}

		.ChatRoom button#sendMessage:hover {
			background: unset !important;
			color: #000;
		}

	.SideBar input#searchBar:focus, .SideBar #searchBar:active {
		outline: none;
	}

</style>

<div class="container" style="padding: 0;">
	<div class="row justify-content-center">

		<div class="col-md-12 row">

			<div class="col-md-2" style="padding: 0;">
				<div class="SideBar card shadow-lg border-0 h-100 rounded-4">
					<div class="card-header bg-gradient bg-primary text-white rounded-top-4">
						@* <strong><i class="bi bi-house-door-fill me-1"></i>Home</strong> *@
						@* <a class="nav-link text-dark navFonts" asp-area="" asp-controller="Home" asp-action="Index"><strong><i class="bi bi-house-door-fill me-1"></i>Home</strong></a> *@

						<a asp-area="" asp-controller="Home" asp-action="Index">
							<strong><i class="bi bi-house-door-fill me-1"></i>Home</strong>
						</a>

					</div>

					<div class="card-body p-3 d-flex flex-column">
						<!-- Search Bar -->
						<div class="input-group mb-3">
							<span class="input-group-text bg-white border-end-0">
								<i class="bi bi-search text-muted"></i>
							</span>
							<input type="text" id="searchBar" class="form-control border-start-0" placeholder="Search Groups" onkeyup="filterGroups()">
						</div>

						<ul id="groupList" class="list-group flex-grow-1 overflow-auto custom-scroll">
							<!-- Rooms will be appended here dynamically -->
						</ul>
					</div>
				</div>
			</div>



			<div class="col-md-10 chatsection ChatRoom" style="display:none ; padding : 0px;">
				<input type="hidden" value="" id="hiddenRoomName" disabled />
				<input type="hidden" class="form-control" value="@User.Identity?.Name" id="senderEmail" disabled />

				<div class="card">
					<div class="card-header bg-primary text-white">
						<div class="chatheader row">

							<div class="col-md-6">
								<strong>Room</strong> <strong id="roomName"></strong>
							</div>
							<div class="col-md-6">
								<div class="ZoomBtns">
									<button onclick="fontZoomIn()"><i class="fa-solid fa-magnifying-glass-plus"></i></button>
									<button onclick="fontZoomOut()"><i class="fa-solid fa-magnifying-glass-minus"></i></button>
								</div>
							</div>
						</div>
					</div>

					<div class="card-footer" style="overflow-y: auto; background: #E6EAEA; border: 1px #c3c3c3 solid; border-radius: 0px 0px 5px 5px; height: 100%;">
						<ul id="messagesList" class="list-group list-group-flush"></ul>
					</div>
					@* <div style="border: 1px solid #000;"> *@
				</div>

				<div class="card-body row">

					<div class="col-md-11">
						<div class="col-sm-12 TextareaBox">
							<textarea class="form-control" id="chatMessage" rows="2" placeholder="Type your message here..." style="height: 38px;"></textarea>
							<i class="fa-solid fa-align-right" id="alignRight"></i>
							<i class="fa-solid fa-align-left" id="alignLeft"></i>
						</div>
					</div>

					<div class="col-md-1" style="display: flex;flex-direction: column-reverse;">
						<button type="button" class="btn btn-success" id="sendMessage">Send</button>
					</div>
				</div>

			</div>

			<div class="col-md-10 arylogo" style="padding-left : 0px;">
				<img src="~/Images/arynewslogo.png" style="width: 100%;" alt="Italian Trulli">
			</div>

		</div>

	</div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.js"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
	$(document).ready(function() {

		$('#chatMessage').css('direction', 'rtl');

		$('#alignRight').click(function() {
			$('#chatMessage').css('direction', 'rtl');
		});

		$('#alignLeft').click(function() {
			$('#chatMessage').css('direction', 'ltr');
		});
		loadRooms();
		renderMessage();

	});

	let skipDays = 0;
	let isLoading = false;
	let allMessagesLoaded = false;
	var selectedRoom = "";
	let currentRoom = null;
	let fontSize = 12;

	// Scroll-to-top detection for loading older messages
	$(".card-footer").on("scroll", function () {

		if ($(this).scrollTop() == 0 && !isLoading && !allMessagesLoaded) {
			skipDays += 1;
			console.log("scrollTop :"+$(this).scrollTop())

			loadGroupMessages(currentRoom, skipDays, true); // load more
		}
	});

	var connectionChat = new signalR.HubConnectionBuilder().withUrl("/hubs/basicchat").build();

	document.getElementById("sendMessage").disabled = false;

	$(document).on("click", ".copy-btn", function () {
		var textToCopy = $(this).siblings(".message-text").text();
		var $btn = $(this);
		var $icon = $btn.find("i");

		navigator.clipboard.writeText(textToCopy).then(() => {
			$icon.removeClass("fa-copy").addClass("fa-check");

			setTimeout(() => {
				$icon.removeClass("fa-check").addClass("fa-copy");
			}, 1500);
		}).catch(err => {
			console.error("Failed to copy: ", err);
		});
	});

	connectionChat.on("MessageReceived", function (user, message) {
		renderMessage(user, message);

		// Auto-scroll to bottom of chat window
		$(".card-footer").scrollTop($(".card-footer")[0].scrollHeight);
	});

	$("#sendMessage").on("click", function (event) {
		event.preventDefault();

		var sender = $("#senderEmail").val();
		var room = $("#hiddenRoomName").val().trim();
		var message = $("#chatMessage").val();

		if (!message) return;

		var url = room.length > 0 ? '/SendMessageToGroup' : '/SendMessageToAll';
		var data = room.length > 0
			? { user: sender, room: room, message: message }
			: { user: sender, message: message };

		$.ajax({
			url: url,
			type: 'POST',
			data: data,
			success: function (response) {
				console.log(response);
				$("#chatMessage").val('');
			},
			error: function (error) {
				console.error('Error:', error);
			}
		});
	});

	connectionChat.start().then(function () {
		console.log("SignalR connected");

		// Try to get the first room from the list or prompt user to select
		var firstRoom = $("#groupList .group-item").first().data("room");

		if (firstRoom) {
			connectionChat.invoke("JoinRoom", firstRoom);
			console.log("Joined room: " + firstRoom);
		}
		else
		{
			console.warn("No room to join yet.");
		}

		$("#sendMessage").prop("disabled", false);
	});

	function filterGroups() {
		var searchTerm = $('#searchBar').val().toLowerCase(); // Get the search term
		var groupItems = $('#groupList .group-item'); // Get all group items

		groupItems.each(function () {
			var groupName = $(this).text().toLowerCase(); // Get the text of the group item
			if (groupName.indexOf(searchTerm) === -1) {
				// Hide groups that don't match the search term
				$(this).hide();
			} else {
				// Show matching groups
				$(this).show();
			}
		});
	}

	function loadRooms() {
		$.ajax({
			url: '/Home/GetRooms',
			type: 'GET',
			success: function (rooms) {
				var groupList = $("#groupList");
				groupList.empty();

				$.each(rooms, function (index, room) {
					let firstLetter = room.charAt(0).toUpperCase();

					groupList.append(`
						<li class="group-item" data-room="${room}">
							<div class="letter-avatar d-flex align-items-center justify-content-center me-2">
								${firstLetter}
							</div>
							<span>${room}</span>
						</li>
					`);
				});

				filterGroups();
			},
			error: function (err) {
				console.error("Failed to load rooms", err);
			}
		});
	}

	$(document).on("click", ".group-item", function () {
		var roomName = $(this).data("room");

		$(".group-item").removeClass("active");  // remove from all
		$(this).addClass("active");

		$('.chatsection').show();
		$('.arylogo').hide();

		// Leave previous room if needed (optional)
		if (currentRoom) {
			connectionChat.invoke("LeaveRoom", currentRoom);
		}

		// Join new room
		connectionChat.invoke("JoinRoom", roomName).then(() => {
			console.log("Joined room:", roomName);
			currentRoom = roomName;
			$("#roomName").text(" - " + roomName);
			$("#hiddenRoomName").val(roomName);

			$("#messagesList").empty();
			// Load chat messages from DB via AJAX
			loadGroupMessages(roomName);
		});
	});

	function fontZoomIn() {
	  if (fontSize < 20) { // max limit
			fontSize += 2;
			customFontSize(fontSize);
	  }
	}

	function fontZoomOut() {
	  if (fontSize > 6) { // min limit
			fontSize -= 2;
			customFontSize(fontSize);
	  }
	}

	function customFontSize(fontSize) {

		$(".message-text").css("font-size", `${fontSize}px`);
		if(fontSize <=12)
		{
			 $(".fw-semibold ").css("font-size", `${fontSize}px`);
			 $(".text-muted").css("font-size", `${fontSize}px`);
		}
	}

	function loadGroupMessages(roomName, skipDaysParam = 0, prepend = false) {

		console.log(`roomName ${roomName} skipDaysParam ${skipDaysParam} `)

		isLoading = true;

		$.ajax({
			url: `/Home/GetMessagesByRoom`,
			type: 'GET',
			data: { roomName: roomName, skipRecords: skipDaysParam },
			success: function (messages) {
				if (!messages || messages.length === 0) {
					allMessagesLoaded = false;
					isLoading = false;
					return;
				}

				const chatList = $("#messagesList");
				let scrollPosBefore = $(".card-footer")[0].scrollHeight;

				messages.forEach(function (msg) {
					const messageHtml = renderMessage(msg.sender, msg.message, true);
					if (prepend) {
						chatList.prepend(messageHtml);
					} else {
						chatList.append(messageHtml);
					}
				});

				if (!prepend) scrollToBottom();
				else {
					let scrollDiff = $(".card-footer")[0].scrollHeight - scrollPosBefore;
					$(".card-footer").scrollTop(scrollDiff);
				}

				isLoading = false;
			},
			error: function (error) {
				console.error("Error loading messages:", error);
				isLoading = false;
			}
		});
	}

	function renderMessage(user, message, returnOnly = false) {
		var senderEmail = $("#senderEmail").val();
		var isOwnMessage = user === senderEmail;

		let now = new Date();
		let timeStr = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });

		var userName = capitalizeFirstLetter(user);
		var userInfo = $("<div>")
			.addClass("d-flex ms-2")
			.css({
				"min-width": "120px",
				"position": "relative",
				"display": "flex",
				"flex-direction": "column",
				"text-align": "right",
				"align-items": "flex-end"
			})
			.append(
				$("<span>").addClass("fw-semibold UserIcon").text(userName[0]),
				$("<span>").addClass("fw-semibold UserName").text(userName),
				$("<small>").addClass("text-muted").text(timeStr)
			);


		// Chat bubble
		var bubble = $("<div>")
			.addClass("msg-custom rounded px-3 py-2 position-relative")
			.addClass(isOwnMessage ? "text-white msg" : "text-dark msg")
			.css({
				"max-width": "85%",
				"background-color": isOwnMessage ? "#f5f5f5" : "#303d4f"
			})
			.append(
				$("<div>").addClass("message-text").html(message.replace(/\n/g, "<br>")),
				$("<button>")
					.addClass("btn btn-sm btn-light copy-btn position-absolute top-0 end-0 m-1")
					.html('<i class="fa-solid fa-copy"></i>')
					.attr("title", "Copy message")
			);

		// Flex row: bubble + user info
		var contentWrapper = $("<div>")
			.addClass("d-flex customClassContent")
			.addClass(isOwnMessage ? "flex-row-reverse text-end" : "flex-row")
			.append(bubble)
			.append(userInfo);



		// Main <li>
		var li = $("<li>")
			.addClass("list-group-item border-0 d-flex")
			.addClass(isOwnMessage ? "justify-content-end" : "justify-content-start")
			.append(contentWrapper);

		return returnOnly ? li : $("#messagesList").append(li);
	}

	function scrollToBottom() {
		var messagesBox = $('.card-footer');
		messagesBox.scrollTop(messagesBox.prop("scrollHeight"));
	}

	function capitalizeFirstLetter(string) {
	  return string.charAt(0).toUpperCase() + string.slice(1);
	}

	$("#createRoom").on("click", function (e) {
		e.preventDefault();

		var newRoom = $("#newRoomName").val().trim();
		if (!newRoom) return;

		$.ajax({
			url: '/Home/CreateRoom', // make sure the route matches your controller
			type: 'POST',
			data: { roomName: newRoom },
			success: function () {
				loadRooms(); // reload dropdown list
				$("#newRoomName").val('');
			},
			error: function (xhr, status, error) {
				console.error("Room creation failed:", error);
			}
		});
	});

	$("#sendMessage").on("click", function (event) {
		event.preventDefault();

		var sender = $("#senderEmail").val();
		var message = $("#chatMessage").val();
		if (!message || !selectedRoom) return;

		connectionChat.invoke("SendMessageToRoom", selectedRoom, sender, message);
		$("#chatMessage").val('');
	});

	$('#chatMessage').on('keydown', function(e) {
		if (e.which === 13) { // Enter key
			if (e.ctrlKey) { // Ctrl+Enter → Insert new line
				// Get current cursor position
				var start = this.selectionStart;
				var end = this.selectionEnd;

				// Insert a new line at cursor position
				var text = $(this).val();
				$(this).val(
					text.substring(0, start) +
					'\n' +
					text.substring(end)
				);

				// Move cursor to after the new line
				this.selectionStart = this.selectionEnd = start + 1;

				return false; // Prevent default behavior
			}
			else { // Just Enter → Send message
				e.preventDefault();
				$('#sendMessage').click();
			}
		}
	});

	connectionChat.start().then(function () {
		$("#sendMessage").prop("disabled", false);
	});

</script>
