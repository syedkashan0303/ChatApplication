@using Microsoft.AspNetCore.Identity
@using SignalRMVC.CustomClasses

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject UserInfoService UserInfoService

@{
    var fullName = await UserInfoService.GetFullNameAsync();
}


<ul class="navbar-nav" style="align-items: center;">
    <li class="nav-item ThemeToggle">
        <button id="ThemeChangebtn" ><i class="fa-solid fa-moon"></i></button>
    </li>
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a id="manage" class="nav-link text-dark" title="Manage" style="text-transform: capitalize;">@fullName!</a>
    </li>
    <li class="nav-item">
            <form id="logoutForm" class="form-inline navFonts" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0 navFonts">Logout</button>
        </form>
    </li>
}
else
{
  
    <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
